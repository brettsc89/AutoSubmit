#3D box simulation

atom_modify map yes

read_restart             ../equilib/poly.restart.500000



#	Variable definition
variable lnorm		equal     1e-9           # length normalization for nano units
variable tnorm  	equal     1e-9           # time normalization for nano units
variable mnorm  	equal     1e-21          # mass normalization for nano units
variable enorm  	equal     1.60217662e-19 # charge normalization for nano units


# Defining constants
variable cs_e		equal	  1.60217662e-19   # unit charge in Coulomb
variable cs_kB          equal     1.38064852e-23   # SI units
variable cs_eps         equal     8.854187817e-12  # SI units
variable cs_4piby3	equal     4.0*PI/3.0
variable cs_cfden       equal     (1.0/${cs_4piby3})^(1/3)
variable cs_1by4pep     equal     1.0/(4.0*PI*${cs_eps})
variable cs_Msp         equal     9.10938356e-31 # electron mass in SI

# Plasma parameters (All in physical units)
variable Gm             equal     0.1              # Coupling strength (each species)
variable Np             equal     20000           # No. of particles 
variable ndens 	        equal     1e14           # /m^3   (each species)
variable Z              equal     -1.0           # units of charge
variable mp             equal     ${cs_Msp}      # charged species mass
variable Q              equal     ${Z}*${cs_e}   # charge on the particle

# Calculating plasma properties (based on per species)
variable  aa            equal     ${cs_cfden}*(1.0/${ndens})^(1/3)  
variable  T             equal     ${cs_1by4pep}*(((${Z})^2)*(${cs_e})^2)/(${aa}*${cs_kB}*${Gm})
variable  Vc            equal     ${Np}/${ndens}
variable  lc            equal     (${Vc})^(1/3)
variable  pl_prd        equal     ((${cs_eps}*${mp})/(${ndens}*(${Z}*${cs_e})^2))^(1/2)

print     "The coupling strength Gm                    = ${Gm}"	      file plasma_parameters.txt screen no
print     "The density of plasma                       = ${ndens}"    append plasma_parameters.txt screen no
print  	  "The plasma period                           = ${pl_prd}"   append plasma_parameters.txt screen no	
print     "The temperature corresponding Gamma ${Gm}   = ${T} "       append plasma_parameters.txt screen no
print     "The average interparticle separation a      = ${aa}"       append plasma_parameters.txt screen no
print     "Length of the system in each direction, L   = ${lc}"       append plasma_parameters.txt screen no

# Defining simulation parameters (With proper normalization)
variable a3d		equal     ${aa}/${lnorm}      # Av. int. sep in normalized unit
variable lu     	equal     ${a3d}              # unit cell length (same as a3d in liquid)
variable Q1     	equal     ${Q}/${enorm}      # charge on particle
variable lxx    	equal	  ${lc}/${lnorm}
variable lyy    	equal	  ${lc}/${lnorm}
variable lzz    	equal 	  ${lc}/${lnorm}
variable ompei  	equal     ${pl_prd}/${tnorm}   # plasma characterstic frequency
variable kscr           equal     2.0/${a3d} 

variable dt    		equal     0.001*${ompei} #timestep size
variable nt     	equal     1000000         #total runsteps
variable trx    	equal     100*${dt}    #temp relax for nvt
variable Nth            equal     1000          	       # thermo steps
variable nrst   	equal     500000        # restart file generation steps

#creating positrons and protons with specific temperature
variable itp         	equal     ${T}        #init temp for NVT 
variable ftp     	equal     ${T}        #final temp for NVT 

variable cutf   	equal     5.0*${lu}      #pair force cuf-off
variable ngh    	equal     0.1*${cutf}

# Masses
variable mp1		equal     ${mp}/${mnorm}

# assume type 1 is positive
set			group all charge ${Q1}

# Force field
pair_style		coul/long ${cutf}
#pair_style		coul/debye ${kscr} ${cutf}  #coul/long ${cutf} 
pair_coeff		* *

kspace_style    	pppm 1e-6
kspace_modify           mesh 50 50 50 
pair_modify     	table 0

#Settings
neighbor		${ngh} bin
neigh_modify		every 1 delay 0  check yes one 10000 page 160000

mass 1 			${mp1}

# temperature controller

fix			eq1 all nve

# Radial distribution function with NVE
compute  	        c2 all rdf 2000 1 1
fix 			f8 all ave/time 1 ${nrst} ${nrst} c_c2[*] file rdfs_nve.dat mode vector



reset_timestep  0

compute         myKE all ke/atom
compute         myPE all pe/atom pair kspace
compute         myStress all stress/atom NULL virial
compute         flux all heat/flux myKE myPE myStress

group empty empty
compute         zmyKE empty ke/atom
compute         zmyPE empty pe/atom pair kspace 
compute         zmyStress empty stress/atom NULL virial 

compute 	Kflux all heat/flux myKE zmyPE zmyStress
compute 	Pflux all heat/flux zmyKE myPE zmyStress
compute 	Sflux all heat/flux zmyKE zmyPE myStress 

variable FF1 equal c_flux[1]
variable KF1 equal c_Kflux[1]
variable PF1 equal c_Pflux[1]
variable SF1 equal c_Sflux[1]

variable FF2 equal c_flux[2]
variable KF2 equal c_Kflux[2]
variable PF2 equal c_Pflux[2]
variable SF2 equal c_Sflux[2]

variable FF3  equal c_flux[3]
variable KF3 equal c_Kflux[3]
variable PF3 equal c_Pflux[3]
variable SF3 equal c_Sflux[3]

variable time equal step

fix 3 all print 100 "${time} ${KF1} ${PF1} ${SF1}" file "Jx.txt" screen "no" title "#time fluxK fluxP fluxS"
fix 4 all print 100 "${time} ${KF2} ${PF2} ${SF2}" file "Jy.txt" screen "no" title "#time fluxK fluxP fluxS"
fix 5 all print 100 "${time} ${KF3} ${PF3} ${SF3}" file "Jz.txt" screen "no" title "#time fluxK fluxP fluxS"




thermo			${Nth}
timestep		${dt}

# potential calculation
restart         	${nrst}   poly.restart
run			${nt}


